# -*- coding: utf-8 -*-
"""Feito em aula  Exercícios de Python Básico - 01

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HtAKpFsOturKzQCPN-3BJRIlUdEsM_4p

# 1 - Variáveis e Tipos de Dados
"""

'''
1.1. Crie variáveis para armazenar o nome, idade, peso e altura de uma pessoa.
Imprima os valores e os tipos de dados dessas variáveis.
'''
nome = 'Douglas'
print(nome)
print(type(nome))
idade = 48
print(idade)
print(type(idade))
peso = 87
print(peso)
print(type(peso))
altura = 1.85
print(altura)
print(type(altura))

'''
1.2. Atualize a variável de peso para um valor diferente e imprima o novo valor.
'''
peso = 86
print(peso)

"""# 2 - Operadores Matemáticos"""

'''
2.1. Crie uma variável a com valor 10 e uma variável b com valor 3. Realize as
seguintes operações e imprima os resultados:
Soma
Subtração
Multiplicação
Divisão
Parte inteira da divisão
Resto da divisão
Exponenciação
'''
a = 10
b = 3
soma  = a + b
print(soma)
sub = a - b
print(sub)
mult =  a * b
print(mult)
div = a / b
print(div)
intdiv = a // b
print(intdiv)
resto = a % b
print(resto)
potencia = a ** b
print(potencia)

"""# 3 - Entrada de Dados pelo Usuário

"""

'''
3.1. Peça ao usuário para digitar seu nome e armazene em uma variável. Imprima
uma mensagem de boas-vindas usando o nome fornecido.
'''
nome = input('Informe seu nome: ')
print(f'Seja bem-vindo: {nome}!')

'''
3.2. Peça ao usuário para digitar sua idade, peso e altura. Calcule o IMC e
imprima o resultado arredondado para três casas decimais.
'''
idade = float(input('Informe sua idade: '))
peso = float(input('Informe seu peso: '))
altura = float(input('Informe sua altura: '))
imc = peso / altura ** 2
print(f'O IMC é {imc:.3f}')

# Método Alternativo
'''
3.2. Peça ao usuário para digitar sua idade, peso e altura. Calcule o IMC e
imprima o resultado arredondado para três casas decimais.
'''
dados = input('Informe sua idade, peso e altura separados por espaços: ')
dados = dados.split()
for i in range(len(dados)):
  dados[i] = float(dados[i])
imc = dados[1]/dados[2]**2
print(f'O IMC é {imc:.3f}')

"""# 4 - Função de Impressão"""

'''
4.1. Peça ao usuário para digitar um número e imprima o número digitado.
'''
n = float(input('Informe um número: '))
print(n)

'''
4.2. Peça ao usuário para digitar dois números e imprima a soma deles.
'''
n1 = float(input('Informe um número: '))
n2 = float(input('Informe outro número: '))
print(f'A soma dos números informados é {n1+n2}')

# Método alternativo
'''
4.2. Peça ao usuário para digitar dois números e imprima a soma deles.
'''
ns = input('Informe dois números separados por espaços: ')
ns = ns.split()
for i in range(len(ns)):
  ns[i] = float(ns[i])
print(f'A soma dos números informados é {sum(ns)}')

"""# 5 - Métodos de Strings"""

'''
5.1. Peça ao usuário para digitar um e-mail e verifique se o e-mail contém o
caractere '@'. Imprima uma mensagem indicando se é um e-mail válido ou não.
'''
email = input('Informe seu endereço de e-mail: ')
if '@' in email:
  print(f'{email} é válido!')
else:
  print(f'{email} não é válido!')

'''
5.2. Peça ao usuário para digitar uma frase e:
Converta a frase para maiúsculas.
Converta a frase para minúsculas.
Converta a primeira letra de cada palavra para maiúscula.
Verifique se a frase começa com uma determinada palavra (ex.: 'Olá').
'''
frase = input('Informe uma frase: ')
frase = frase.upper()
print(frase)
frase = frase.lower()
print(frase)
frase = frase.title()
print(frase)
frase.startswith('Olá')

"""# 6 - Listas"""

'''
6.1. Crie uma lista com os nomes de cinco amigos. Imprima o nome do terceiro
amigo na lista.
'''
amigos = ['Leandro', 'Leonardo', 'Chitãozinho', 'Xororó', 'Zezé']
print(amigos[2])

'''
6.2. Adicione um novo nome à lista de amigos e remova o primeiro nome.
Imprima a lista atualizada.
'''
amigos.append('Luciano')
print(amigos)
amigos.pop(0)
print(amigos)

amigos[0] = 'Luciano'

'''
6.3. Crie uma lista com as idades dos seus amigos e:
Imprima a idade do amigo mais velho.
Imprima a idade do amigo mais novo.
Calcule e imprima a soma das idades.
'''
idades = [61, 62, 70, 71, 65]
print(f'A idade do mais velho é {max(idades)} anos')
print(f'A idade do mais novo é {min(idades)} anos ')
print(f'A soma das idades é {sum(idades)} anos')

"""# 7 - Tuplas"""

'''
7.1 Crie uma tupla com as informações de um cliente (nome, idade, peso, altura).
Imprima todas as informações.
'''
cliente = ('Douglas', 48, 87, 1.85) # Criando uma tupla
print(f'Nome: {cliente[0]}')
print(f'Idade: {cliente[1]}')
print(f'Peso: {cliente[2]}')
print(f'Altura: {cliente[3]}')

'''
7.2. Crie uma nova tupla concatenando a tupla do exercício anterior com o e-mail
do cliente. Imprima a nova tupla.
'''
email = ('doug@gmail.com',)
nova_tupla = cliente + email # Concatenando
print(nova_tupla)

"""# 8 - Dicionários"""

'''
8.1. Crie um dicionário com informações de um cliente
(nome, idade, peso, altura). Imprima o valor associado à chave 'nome'.
'''
cliente = {
    'nome':'Douglas',
    'idade': 48,
    'peso':87,
    'altura':1.85
}
print(cliente['nome'])

'''
8.2. Adicione uma nova chave 'email' ao dicionário do exercício anterior e
imprima o dicionário atualizado.
'''
cliente['email'] = 'doug@gmail.com'
print(cliente)

'''
8.3. Remova a chave 'peso' do dicionário e verifique se a chave 'endereço' está
no dicionário. Imprima os resultados.
'''
cliente.pop('peso')
print(cliente)
if 'endereço' in cliente:
  print('A chave endereço está presente no cliente')
else:
  print('A chave endereço não está presente no cliente')

"""# 9 - Controle de Fluxo"""

# Condicionais
'''
9.1. Peça ao usuário para digitar sua idade e verifique se ele é menor de idade,
 adulto ou idoso. Imprima uma mensagem correspondente.
'''
idade = float(input('Informe sua idade: '))
if idade < 18:
  print('Você é menor de idade: ')
elif idade < 85:
  print('Você é adulto')
else:
  print('Você é idoso')

# Condicionais
'''
9.2. Peça ao usuário para digitar uma nota (0 a 100) e imprima se ele foi
aprovado (nota >= 60) ou reprovado.
'''
nota = float(input('Informe uma nota de 0 a 100: '))
if nota >= 60:
  print('Aprovado')
else:
  print('Reprovado')

# Loop For
'''
9.3. Crie uma lista com os nomes de cinco cidades. Use um loop for para imprimir
cada nome de cidade.
'''
cidades = ['São Paulo', 'Bragança Paulista', 'Tuiti', 'Vargem', 'Mostarda']
for cidade in cidades:
  print(cidade)

# Loop For
'''
9.4. Crie uma lista com os números de 1 a 10. Use um loop for para imprimir o
quadrado de cada número.
'''
for n in range(1,11):
  print(f'O quadrado de {n} é {n**2}')

"""# 10 - Estudo de caso 01"""

'''
Contexto:
Uma empresa precisa registrar informações sobre seus clientes e calcular o IMC
(Índice de Massa Corporal) de cada um deles. As informações devem ser
armazenadas em um dicionário e exibidas ao final.
'''


'''
Requisitos:
Peça ao usuário para inserir os seguintes dados de um cliente:
Nome
Idade
Peso (em kg)
Altura (em metros)
E-mail
Armazene essas informações em um dicionário.
Calcule o IMC do cliente (IMC = Peso / (Altura * Altura)) e adicione esse valor ao dicionário.
Exiba todas as informações do cliente, incluindo o IMC arredondado para duas casas decimais.

'''
nome = input('Informe o nome: ')
idade = float(input('Informe a idade: '))
peso = float(input('Informe o peso: '))
altura = float(input('Informe a altura: '))
email = input('Informe o e-mail: ')
imc = peso / altura ** 2
cliente = {
    'nome':nome,
    'idade':idade,
    'peso':peso,
    'altura':altura,
    'e-mail':email,
    'imc':round(imc,2)
}
print(cliente)
for k, v in cliente.items():
  print(f'{k}:{v}')

"""# 11 - Estudo de Caso 02"""

'''
Contexto:
Uma escola precisa analisar as notas de seus alunos e determinar se cada aluno
foi aprovado ou reprovado. As notas serão armazenadas em uma lista e a análise
deve ser realizada em um loop.
'''

'''
Requisitos:
Peça ao usuário para inserir o nome e a nota de cinco alunos.
Armazene os nomes e as notas em listas separadas.
Para cada aluno, verifique se a nota é maior ou igual a 60. Se sim, o aluno está
aprovado; caso contrário, está reprovado.
Exiba uma mensagem para cada aluno informando seu nome, nota e se foi aprovado
ou reprovado.
'''
nomes = []
notas = []
for i in range(5):
  nomes.append(input(f'Informe o nome do {i+1}º aluno: '))
  notas.append(float(input(f'Informe a nota {i+1}º aluno: ')))
for i in range(5):
  cond = 'Aprovado' if notas[i] >= 60 else 'Reprovado'
  print(f'O aluno {nomes[i]} teve nota {notas[i]} e está {cond}')

"""# 12 - Estudo de caso 03"""

'''
Contexto
Uma empresa deseja realizar uma pesquisa de opinião com cinco participantes
sobre um novo produto. As respostas devem ser armazenadas e analisadas para
verificar a satisfação dos clientes.
'''

'''
Requisitos
Peça ao usuário para inserir o nome e a opinião (satisfeito/insatisfeito) de
cinco participantes.
Armazene os nomes e as opiniões em um dicionário.
Conte o número de participantes satisfeitos e insatisfeitos.
Exiba a lista de participantes satisfeitos e insatisfeitos, bem como o número
total de cada categoria.
'''
pesquisa = {}
for i in range(5):
  nome = input(f'Informe o nome do {i+1}º participante: ')
  opiniao = input(f'Informe a opinião (satisfeito ou insatisfeito) do {i+1}º participante: ').lower()
  pesquisa[nome] = opiniao
satisfeitos = []
insatisfeitos = []
for nome, opiniao in pesquisa.items():
  if opiniao == 'satisfeito':
    satisfeitos.append(nome)
  elif opiniao == 'insatisfeito':
    insatisfeitos.append(nome)
print('\nParticipantes Satisfeitos: ')
for nome in satisfeitos:
  print(nome)
print(f'\nTotal de Participantes satisfeitos {len(satisfeitos)}')
print('\nParticipantes Insatisfeitos: ')
for nome in insatisfeitos:
  print(nome)
print(f'\nTotal de Participantes insatisfeitos {len(insatisfeitos)}')