# -*- coding: utf-8 -*-
"""Mini projeto pandas - Aline Melo

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Apv2VxUgXyt9eRdMELaqQyECokwve8Cu
"""

import pandas as pd

df = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vSpCW9yMoUMQ4tknj5Lg_TYVfIC3P9KoVPPqlJKsBu2HzGaC579yCp9Ohxni2ncY-xyLfugXan9K6yf/pub?gid=636707205&single=true&output=csv')
display(df.head(2))

'''
Você recebeu uma base de dados com informações de funcionários.
Sua tarefa é responder às seguintes perguntas utilizando a biblioteca pandas:

01 - Quantos registros existem na base de dados?
02 - Quantos registros têm informações completas (sem valores ausentes)?
03 - Substitua os valores ausentes na coluna "Salário" pela média dos salários
      e exiba a nova média.
04 - Substitua todos os valores "TI" na coluna "Departamento" por
     "Tecnologia da Informação".
05 - Qual é o salário mais alto e quem o recebe?
06 - Quantos funcionários estão no departamento de Marketing?
07 - Qual é a idade média dos funcionários por departamento?
08 - Liste os cargos únicos presentes na base.
09 - Crie uma nova coluna chamada "Tempo na Empresa" que calcula o tempo de
     trabalho com base na data de contratação.
10 - Liste os 5 funcionários com mais tempo de empresa.
11 - Quantos funcionários têm desempenho avaliado acima de 8?
12 - Qual é o salário total por departamento?
13 - Liste os 5 funcionários mais jovens.
14 - Existe algum registro sem salário? Liste-os.
15 - Utilize a função apply para criar uma nova coluna "Categoria de Salário",
     classificando os funcionários como "Baixo" (salário < 3000), "Médio"
     (3000 ≤ salário ≤ 7000) e "Alto" (salário > 7000).
16 - Utilize a função map para criar uma nova coluna chamada
     "Desempenho Simplificado", substituindo a "Avaliação de Desempenho" em
     uma escala simples: "Baixo" (1-3), "Médio" (4-7) e "Alto" (8-10).
17 - Utilize uma função lambda para criar uma nova coluna "Idade em 5 Anos",
     que adiciona 5 anos à idade atual dos funcionários.
18 - Quantos funcionários estão na categoria de salário "Alto"?
19 - Use dropna para excluir registros com valores ausentes e salve o
     DataFrame limpo em um novo arquivo CSV.
20 - Faça o casting da coluna "Avaliação de Desempenho" para o tipo inteiro e
     exiba o DataFrame.
'''

# 01 - Quantos registros existem na base de dados?
total_registros = df.shape[0]
print(f'Total de registros: {total_registros}')

# 02 - Quantos registros têm informações completas (sem valores ausentes)?
registros_completos = df.dropna().shape[0]
print(f'Total de registros completos: {registros_completos}')

# 03 - Substitua os valores ausentes na coluna "Salário" pela média dos salários e exiba a nova média.
media_salario = df['Salário'].mean()
df['Salário'].fillna(media_salario, inplace=True)
print(f'Nova média de salário: {df["Salário"].mean()}')

# 04 - Substitua todos os valores "TI" na coluna "Departamento" por "Tecnologia da Informação".
df['Departamento'].replace('TI', 'Tecnologia da Informação', inplace=True)

# 05 - Qual é o salário mais alto e quem o recebe?
salario_maximo = df['Salário'].max()
funcionario_max_salarial = df[df['Salário'] == salario_maximo]['Nome'].values[0]
print(f'Salário mais alto: {salario_maximo}, Recebido por: {funcionario_max_salarial}')

# 06 - Quantos funcionários estão no departamento de Marketing?
num_marketing = df[df['Departamento'] == 'Marketing'].shape[0]
print(f'Total de funcionários no departamento de Marketing: {num_marketing}')

# 07 - Qual é a idade média dos funcionários por departamento?
idade_media_departamento = df.groupby('Departamento')['Idade'].mean()
print(f'Idade média por departamento:\n{idade_media_departamento}')

# 08 - Liste os cargos únicos presentes na base.
cargos_unicos = df['Cargo'].unique()
print(f'Cargos únicos: {cargos_unicos}')

# 09 - Crie uma nova coluna chamada "Tempo na Empresa".
df['Data de Contratação'] = pd.to_datetime(df['Data de Contratação'])
df['Tempo na Empresa'] = (pd.to_datetime('today') - df['Data de Contratação']).dt.days

# 10 - Liste os 5 funcionários com mais tempo de empresa.
funcionarios_mais_antigos = df.nlargest(5, 'Tempo na Empresa')[['Nome', 'Tempo na Empresa']]
print(f'5 funcionários com mais tempo de empresa:\n{funcionarios_mais_antigos}')

# 11 - Quantos funcionários têm desempenho avaliado acima de 8?
desempenho_acima_8 = df[df['Avaliação de Desempenho'] > 8].shape[0]
print(f'Total de funcionários com desempenho acima de 8: {desempenho_acima_8}')

# 12 - Qual é o salário total por departamento?
salario_total_departamento = df.groupby('Departamento')['Salário'].sum()
print(f'Salário total por departamento:\n{salario_total_departamento}')

# 12 - Qual é o salário total por departamento?
salario_total_departamento = df.groupby('Departamento')['Salário'].sum()
print(f'Salário total por departamento:\n{salario_total_departamento}')

# 14 - Existe algum registro sem salário? Liste-os.
sem_salario = df[df['Salário'].isna()]
print(f'Registros sem salário:\n{sem_salario}')

# 15 - Categorizar o salário.
def categorizar_salario(salario):
    if salario < 3000:
        return 'Baixo'
    elif salario <= 7000:
        return 'Médio'
    else:
        return 'Alto'

df['Categoria de Salário'] = df['Salário'].apply(categorizar_salario)

# 16 - Desempenho Simplificado.
def desempenho_simplificado(avaliacao):
    if 1 <= avaliacao <= 3:
        return 'Baixo'
    elif 4 <= avaliacao <= 7:
        return 'Médio'
    else:
        return 'Alto'

df['Desempenho Simplificado'] = df['Avaliação de Desempenho'].map(desempenho_simplificado)

# 17 - Idade em 5 Anos.
df['Idade em 5 Anos'] = df['Idade'] + 5

# 18 - Quantos funcionários estão na categoria de salário "Alto"?
num_alto_salario = df[df['Categoria de Salário'] == 'Alto'].shape[0]
print(f'Total de funcionários na categoria de salário "Alto": {num_alto_salario}')

# 19 - Excluir registros com valores ausentes e salvar em novo CSV.
df_limpo = df.dropna()
df_limpo.to_csv('funcionarios_limpos.csv', index=False)

# 20 - Casting da coluna "Avaliação de Desempenho" para o tipo inteiro.
df['Avaliação de Desempenho'] = df['Avaliação de Desempenho'].astype(int)
print(df.head())