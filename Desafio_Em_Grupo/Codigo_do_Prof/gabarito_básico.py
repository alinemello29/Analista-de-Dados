# -*- coding: utf-8 -*-
"""Gabarito Básico

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11IaWv-fEDaY0fIANPYc0DRQltUbYbmYl
"""

# Sistema básico de gerenciamento de funcionários

# Dicionário para armazenar os dados dos funcionários
funcionarios = {}

# Função para gerar um identificador único (ID) para cada funcionário
def gerar_id():
    if funcionarios:
        return max(funcionarios.keys()) + 1
    return 1

# Função para adicionar um novo funcionário
def adicionar_funcionario():
    id_funcionario = gerar_id()
    nome = input("Digite o nome do funcionário: ")
    cidade = input("Digite a cidade em que reside: ")
    estado = input("Digite o estado: ")
    idade = input("Digite a idade do funcionário: ")
    escolaridade = input("Digite a escolaridade do funcionário: ")
    cargo = input("Digite o cargo do funcionário: ")
    salario = float(input("Digite o salário do funcionário: "))
    email = input("Digite o e-mail do funcionário: ")

    # Armazena os dados do funcionário no dicionário
    funcionarios[id_funcionario] = {
        'Nome': nome,
        'Cidade': cidade,
        'Estado': estado,
        'Idade': idade,
        'Escolaridade': escolaridade,
        'Cargo': cargo,
        'Salário': salario,
        'E-mail': email
    }
    print(f"Funcionário {nome} adicionado com sucesso!")

# Função para atualizar as informações de um funcionário
def atualizar_funcionario():
    id_funcionario = int(input("Digite o ID do funcionário que deseja atualizar: "))
    if id_funcionario in funcionarios:
        print("Informe os novos dados do funcionário (deixe em branco para manter o valor atual):")
        nome = input(f"Nome atual ({funcionarios[id_funcionario]['Nome']}): ")
        cidade = input(f"Cidade atual ({funcionarios[id_funcionario]['Cidade']}): ")
        estado = input(f"Estado atual ({funcionarios[id_funcionario]['Estado']}): ")
        idade = input(f"Idade atual ({funcionarios[id_funcionario]['Idade']}): ")
        escolaridade = input(f"Escolaridade atual ({funcionarios[id_funcionario]['Escolaridade']}): ")
        cargo = input(f"Cargo atual ({funcionarios[id_funcionario]['Cargo']}): ")
        salario = input(f"Salário atual ({funcionarios[id_funcionario]['Salário']}): ")
        email = input(f"E-mail atual ({funcionarios[id_funcionario]['E-mail']}): ")

        # Atualiza os dados com base nas entradas do usuário
        if nome:
            funcionarios[id_funcionario]['Nome'] = nome
        if cidade:
            funcionarios[id_funcionario]['Cidade'] = cidade
        if estado:
            funcionarios[id_funcionario]['Estado'] = estado
        if idade:
            funcionarios[id_funcionario]['Idade'] = idade
        if escolaridade:
            funcionarios[id_funcionario]['Escolaridade'] = escolaridade
        if cargo:
            funcionarios[id_funcionario]['Cargo'] = cargo
        if salario:
            funcionarios[id_funcionario]['Salário'] = float(salario)
        if email:
            funcionarios[id_funcionario]['E-mail'] = email

        print(f"Informações do funcionário {funcionarios[id_funcionario]['Nome']} atualizadas com sucesso!")
    else:
        print("Funcionário não encontrado!")

# Função para listar todos os funcionários cadastrados
def listar_funcionarios():
    if funcionarios:
        print("\nFuncionários cadastrados:")
        for id_funcionario, dados in funcionarios.items():
            print(f"ID: {id_funcionario} | Nome: {dados['Nome']} | Cargo: {dados['Cargo']} | Salário: R${dados['Salário']:.2f}")
    else:
        print("Nenhum funcionário cadastrado.")

# Função para remover um funcionário do sistema
def remover_funcionario():
    id_funcionario = int(input("Digite o ID do funcionário que deseja remover: "))
    if id_funcionario in funcionarios:
        nome = funcionarios[id_funcionario]['Nome']
        del funcionarios[id_funcionario]
        print(f"Funcionário {nome} removido com sucesso!")
    else:
        print("Funcionário não encontrado!")

# Função principal para o menu do sistema
def menu():
    while True:
        print("\nSistema de Gerenciamento de Funcionários")
        print("1. Adicionar novo funcionário")
        print("2. Atualizar informações de um funcionário")
        print("3. Listar todos os funcionários")
        print("4. Remover um funcionário")
        print("5. Sair")

        opcao = input("Escolha uma opção: ")

        if opcao == '1':
            adicionar_funcionario()
        elif opcao == '2':
            atualizar_funcionario()
        elif opcao == '3':
            listar_funcionarios()
        elif opcao == '4':
            remover_funcionario()
        elif opcao == '5':
            print("Encerrando o sistema...")
            break
        else:
            print("Opção inválida! Tente novamente.")

        # Pergunta ao usuário se deseja realizar outra operação ou sair
        continuar = input("\nDeseja realizar outra operação? (s/n): ").lower()
        if continuar != 's':
            print("Encerrando o sistema...")
            break

# Executar o sistema
menu()