# -*- coding: utf-8 -*-
"""Sistema de Cadastro

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RcwnRRvCZOwEPeWiYqpjaw7015jqLXdK

Descrição:

Você foi contratado para desenvolver um sistema básico de gerenciamento de funcionários para uma pequena empresa. O sistema deve ser capaz de receber e  armazenar informações sobre os funcionários e realizar operações básicas de manipulação desses dados.


Requisitos:

Utilize a função input() realizar um cadastro coletando dados do usuário, como nome, cidade e estado em que reside, idade, escolaridade, cargo e salário.

Funcionalidades do Sistema:

O sistema deve oferecer as seguintes funcionalidades:
"""

'''
1 - Adicionar um novo funcionário ao sistema, solicitando informações como nome, cargo, salário, e-mail, etc.
'''
def menu():
    print("1 - Adicionar Funcionário")
    print("2 - Atualizar Funcionário")
    print("3 - Listar Funcionários")
    print("4 - Remover Funcionário")
    print("5 - Sair")

def adicionar_funcionario(funcionarios, id_counter):
    nome = input("Nome: ")
    cidade = input("Cidade: ")
    estado = input("Estado: ")
    idade = int(input("Idade: "))
    escolaridade = input("Escolaridade: ")
    cargo = input("Cargo: ")
    salario = float(input("Salário: "))
    email = input("E-mail: ")

    funcionario = {
        'id': id_counter,
        'nome': nome,
        'cidade': cidade,
        'estado': estado,
        'idade': idade,
        'escolaridade': escolaridade,
        'cargo': cargo,
        'salario': salario,
        'email': email
    }

    funcionarios.append(funcionario)
    print(f"Funcionário {nome} adicionado com ID: {id_counter}")
    return id_counter + 1

'''
2- Atualizar as informações de um funcionário existente com base em um identificador único (como um número de identificação ou nome). Exibir informações de um funcionário específico.
'''
def atualizar_funcionario(funcionarios):
    id_funcionario = int(input("Digite o ID do funcionário que deseja atualizar: "))
    for funcionario in funcionarios:
        if funcionario['id'] == id_funcionario:
            funcionario['nome'] = input("Novo Nome: ")
            funcionario['cidade'] = input("Nova Cidade: ")
            funcionario['estado'] = input("Novo Estado: ")
            funcionario['idade'] = int(input("Nova Idade: "))
            funcionario['escolaridade'] = input("Nova Escolaridade: ")
            funcionario['cargo'] = input("Novo Cargo: ")
            funcionario['salario'] = float(input("Novo Salário: "))
            funcionario['email'] = input("Novo E-mail: ")
            print("Funcionário atualizado com sucesso!")
            return
    print("Funcionário não encontrado.")

'''
3 - Listar todos os funcionários cadastrados.
'''
def listar_funcionarios(funcionarios):
    if not funcionarios:
        print("Nenhum funcionário cadastrado.")
        return
    for funcionario in funcionarios:
        print(f"ID: {funcionario['id']}, Nome: {funcionario['nome']}, Cidade: {funcionario['cidade']}, Estado: {funcionario['estado']}, Idade: {funcionario['idade']}, Escolaridade: {funcionario['escolaridade']}, Cargo: {funcionario['cargo']}, Salário: {funcionario['salario']}, E-mail: {funcionario['email']}")

'''
4 - Permitir a remoção de um funcionário do sistema.
'''
def remover_funcionario(funcionarios):
    id_funcionario = int(input("Digite o ID do funcionário que deseja remover: "))
    for funcionario in funcionarios:
        if funcionario['id'] == id_funcionario:
            funcionarios.remove(funcionario)
            print("Funcionário removido com sucesso!")
            return
    print("Funcionário não encontrado.")

def main():
    funcionarios = []
    id_counter = 1
    while True:
        menu()
        escolha = input("Escolha uma opção: ")
        if escolha == '1':
            id_counter = adicionar_funcionario(funcionarios, id_counter)
        elif escolha == '2':
            atualizar_funcionario(funcionarios)
        elif escolha == '3':
            listar_funcionarios(funcionarios)
        elif escolha == '4':
            remover_funcionario(funcionarios)
        elif escolha == '5':
            print("Saindo do sistema.")
            break
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()

"""Observações Finais:

Certifique-se de implementar um sistema de identificação único para cada funcionário. Valide as entradas do usuário para garantir que as operações sejam realizadas corretamente e sem erros. Documente adequadamente seu código com comentários explicativos para ajudar na compreensão. Esse projeto permite aos alunos praticar e consolidar conceitos fundamentais em Python, como operadores, estruturas de controle, estruturas de dados e funções, enquanto constroem um aplicativo útil para gerenciar informações de funcionários de uma empresa fictícia.

"""