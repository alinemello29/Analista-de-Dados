{"cells":[{"cell_type":"markdown","metadata":{"id":"ZSNm6dI6faBH"},"source":["Descrição:\n","\n","Você foi contratado para desenvolver um sistema básico de gerenciamento de funcionários para uma pequena empresa. O sistema deve ser capaz de receber e  armazenar informações sobre os funcionários e realizar operações básicas de manipulação desses dados.\n","\n","\n","Requisitos:\n","\n","Utilize a função input() realizar um cadastro coletando dados do usuário, como nome, cidade e estado em que reside, idade, escolaridade, cargo e salário.\n"]},{"cell_type":"markdown","metadata":{"id":"MmL3jKwpfjbh"},"source":["Funcionalidades do Sistema:\n","\n","O sistema deve oferecer as seguintes funcionalidades:\n"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":569,"status":"ok","timestamp":1729806550625,"user":{"displayName":"Aline Melo","userId":"03939001404012249705"},"user_tz":180},"id":"-_F0LfIsflLo"},"outputs":[],"source":["'''\n","1 - Adicionar um novo funcionário ao sistema, solicitando informações como nome, cargo, salário, e-mail, etc.\n","'''\n","def menu():\n","    print(\"1 - Adicionar Funcionário\")\n","    print(\"2 - Atualizar Funcionário\")\n","    print(\"3 - Listar Funcionários\")\n","    print(\"4 - Remover Funcionário\")\n","    print(\"5 - Sair\")\n","\n","def adicionar_funcionario(funcionarios, id_counter):\n","    nome = input(\"Nome: \")\n","    cidade = input(\"Cidade: \")\n","    estado = input(\"Estado: \")\n","    idade = int(input(\"Idade: \"))\n","    escolaridade = input(\"Escolaridade: \")\n","    cargo = input(\"Cargo: \")\n","    salario = float(input(\"Salário: \"))\n","    email = input(\"E-mail: \")\n","\n","    funcionario = {\n","        'id': id_counter,\n","        'nome': nome,\n","        'cidade': cidade,\n","        'estado': estado,\n","        'idade': idade,\n","        'escolaridade': escolaridade,\n","        'cargo': cargo,\n","        'salario': salario,\n","        'email': email\n","    }\n","\n","    funcionarios.append(funcionario)\n","    print(f\"Funcionário {nome} adicionado com ID: {id_counter}\")\n","    return id_counter + 1"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":551,"status":"ok","timestamp":1729806554033,"user":{"displayName":"Aline Melo","userId":"03939001404012249705"},"user_tz":180},"id":"wBUavynufs9h"},"outputs":[],"source":["'''\n","2- Atualizar as informações de um funcionário existente com base em um identificador único (como um número de identificação ou nome). Exibir informações de um funcionário específico.\n","'''\n","def atualizar_funcionario(funcionarios):\n","    id_funcionario = int(input(\"Digite o ID do funcionário que deseja atualizar: \"))\n","    for funcionario in funcionarios:\n","        if funcionario['id'] == id_funcionario:\n","            funcionario['nome'] = input(\"Novo Nome: \")\n","            funcionario['cidade'] = input(\"Nova Cidade: \")\n","            funcionario['estado'] = input(\"Novo Estado: \")\n","            funcionario['idade'] = int(input(\"Nova Idade: \"))\n","            funcionario['escolaridade'] = input(\"Nova Escolaridade: \")\n","            funcionario['cargo'] = input(\"Novo Cargo: \")\n","            funcionario['salario'] = float(input(\"Novo Salário: \"))\n","            funcionario['email'] = input(\"Novo E-mail: \")\n","            print(\"Funcionário atualizado com sucesso!\")\n","            return\n","    print(\"Funcionário não encontrado.\")"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":18,"status":"ok","timestamp":1729806555888,"user":{"displayName":"Aline Melo","userId":"03939001404012249705"},"user_tz":180},"id":"lycWat9tf1P5"},"outputs":[],"source":["'''\n","3 - Listar todos os funcionários cadastrados.\n","'''\n","def listar_funcionarios(funcionarios):\n","    if not funcionarios:\n","        print(\"Nenhum funcionário cadastrado.\")\n","        return\n","    for funcionario in funcionarios:\n","        print(f\"ID: {funcionario['id']}, Nome: {funcionario['nome']}, Cidade: {funcionario['cidade']}, Estado: {funcionario['estado']}, Idade: {funcionario['idade']}, Escolaridade: {funcionario['escolaridade']}, Cargo: {funcionario['cargo']}, Salário: {funcionario['salario']}, E-mail: {funcionario['email']}\")"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":608,"status":"ok","timestamp":1729806559189,"user":{"displayName":"Aline Melo","userId":"03939001404012249705"},"user_tz":180},"id":"CCpYwaYpf7D4"},"outputs":[],"source":["'''\n","4 - Permitir a remoção de um funcionário do sistema.\n","'''\n","def remover_funcionario(funcionarios):\n","    id_funcionario = int(input(\"Digite o ID do funcionário que deseja remover: \"))\n","    for funcionario in funcionarios:\n","        if funcionario['id'] == id_funcionario:\n","            funcionarios.remove(funcionario)\n","            print(\"Funcionário removido com sucesso!\")\n","            return\n","    print(\"Funcionário não encontrado.\")"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-JEB4q71nkMS","executionInfo":{"status":"ok","timestamp":1729806835130,"user_tz":180,"elapsed":274359,"user":{"displayName":"Aline Melo","userId":"03939001404012249705"}},"outputId":"f9739057-14b7-498e-c9a7-3820574a61a5"},"outputs":[{"output_type":"stream","name":"stdout","text":["1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 1\n","Nome: Aline Melo \n","Cidade: Prudente\n","Estado: SP\n","Idade: 56\n","Escolaridade: Técnico \n","Cargo: Analista de Sistema\n","Salário: 3000\n","E-mail: aline@gmail.com\n","Funcionário Aline Melo  adicionado com ID: 1\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 1\n","Nome: Mel \n","Cidade: Prudente\n","Estado: SP\n","Idade: 78\n","Escolaridade: Superior\n","Cargo: Médica\n","Salário: 789000\n","E-mail: mel@gmail.com\n","Funcionário Mel  adicionado com ID: 2\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 1\n","Nome: Cruz\n","Cidade: prudnete\n","Estado: SP\n","Idade: 67\n","Escolaridade: medio\n","Cargo: estudante\n","Salário: 7890\n","E-mail: cruz@gmail.com\n","Funcionário Cruz adicionado com ID: 3\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 2\n","Digite o ID do funcionário que deseja atualizar: 3\n","Novo Nome: Mel CRuz\n","Nova Cidade: behnem\n","Novo Estado: sjk\n","Nova Idade: 79\n","Nova Escolaridade: mejed\n","Novo Cargo: meekd\n","Novo Salário: 78909\n","Novo E-mail: aline@gamaul.com\n","Funcionário atualizado com sucesso!\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 3\n","ID: 1, Nome: Aline Melo , Cidade: Prudente, Estado: SP, Idade: 56, Escolaridade: Técnico , Cargo: Analista de Sistema, Salário: 3000.0, E-mail: aline@gmail.com\n","ID: 2, Nome: Mel , Cidade: Prudente, Estado: SP, Idade: 78, Escolaridade: Superior, Cargo: Médica, Salário: 789000.0, E-mail: mel@gmail.com\n","ID: 3, Nome: Mel CRuz, Cidade: behnem, Estado: sjk, Idade: 79, Escolaridade: mejed, Cargo: meekd, Salário: 78909.0, E-mail: aline@gamaul.com\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 4\n","Digite o ID do funcionário que deseja remover: 3\n","Funcionário removido com sucesso!\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 4\n","Digite o ID do funcionário que deseja remover: 2\n","Funcionário removido com sucesso!\n","1 - Adicionar Funcionário\n","2 - Atualizar Funcionário\n","3 - Listar Funcionários\n","4 - Remover Funcionário\n","5 - Sair\n","Escolha uma opção: 5\n","Saindo do sistema.\n"]}],"source":["def main():\n","    funcionarios = []\n","    id_counter = 1\n","    while True:\n","        menu()\n","        escolha = input(\"Escolha uma opção: \")\n","        if escolha == '1':\n","            id_counter = adicionar_funcionario(funcionarios, id_counter)\n","        elif escolha == '2':\n","            atualizar_funcionario(funcionarios)\n","        elif escolha == '3':\n","            listar_funcionarios(funcionarios)\n","        elif escolha == '4':\n","            remover_funcionario(funcionarios)\n","        elif escolha == '5':\n","            print(\"Saindo do sistema.\")\n","            break\n","        else:\n","            print(\"Opção inválida. Tente novamente.\")\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"markdown","metadata":{"id":"4wr6u6_Ufr_1"},"source":["Observações Finais:\n","\n","Certifique-se de implementar um sistema de identificação único para cada funcionário. Valide as entradas do usuário para garantir que as operações sejam realizadas corretamente e sem erros. Documente adequadamente seu código com comentários explicativos para ajudar na compreensão. Esse projeto permite aos alunos praticar e consolidar conceitos fundamentais em Python, como operadores, estruturas de controle, estruturas de dados e funções, enquanto constroem um aplicativo útil para gerenciar informações de funcionários de uma empresa fictícia.\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1Vmzfhrfsd7GWJ6VeX1Wjp4Wipt3_iOA3","timestamp":1729774691197}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}