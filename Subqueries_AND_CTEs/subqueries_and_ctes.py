# -*- coding: utf-8 -*-
"""Subqueries AND CTEs

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RwF1OMhMUtzdsex_QtaRcazxlZ5LVf0p
"""

!pip install mysql-connector-python

import mysql.connector
import pandas as pd

host = '34.69.233.123'
user = 'root'
password = ''
database = 'locadora'

!curl ipecho.net/plain

def consulta():
  query = input('Informe o código da query')
  tabela = input('Informe o nome da tabela pandas para armazenar o resultado')
  connection = mysql.connector.connect(
      host = host,
      user = user,
      password = password,
      database = database
  )
  cursor = connection.cursor()

  try:
    cursor.execute(query)
    result = cursor.fetchall()
    globals()[tabela] = pd.DataFrame(result, columns=cursor.column_names)
    display(globals()[tabela])
  finally:
    cursor.close()
    connection.close()

def ddl(comando):
    connection = mysql.connector.connect(
        host=host,
        user=user,
        password=password,
        database=database
    )
    cursor = connection.cursor()

    try:
        cursor.execute(comando)
        connection.commit()  # Confirma as mudanças no banco
        print(f"Comando DDL executado com sucesso:\n{comando}")
    except mysql.connector.Error as err:
        print(f"Erro ao executar o comando DDL: {err}")
    finally:
        cursor.close()
        connection.close()

consulta()

"""#Subconsultas"""

'''
Consulta que retorna o máximo valor de um modelo de carro
SELECT max(valor)
FROM carro;
essa consulta  retorna uma ínica linha com uma única coluna o que permite que
ela seja usada como condição de igualdade em uma expressão de uma consulta
externa
'''
consulta()

'''
Nesse caso utilizamos a consulta do bloco anterior
como um criterio para a consulta desse bloco, ou seja,
a consulta do bloco anterior e uam subconsulta para a cnsulta
desse bloco (consulta principal)
'''

'''
Qual é o modelo de carro que tem o maior valor?
SELECT modelo, valor
FROM carro
WHERE valor = (SELECT max(valor)
FROM carro);
'''

consulta()

'''
Selecione a data mais antiga de um aluguel de carro
SELECT MIN(data_aluguel)
FROM aluguel;
'''
consulta()

'''
Selecione o nome do cliente, e o modelo alugado e adata_aluguel
na data mais antiga
SELECT cliente.nome, carro.modelo, aluguel.data_aluguel
FROM aluguel
JOIN cliente ON aluguel.codcliente = cliente.codcliente
JOIN carro ON aluguel.codcarro = carro.codcarro
WHERE aluguel.data_aluguel = (SELECT MIN(data_aluguel)
FROM aluguel);
'''
consulta()

'''
Faça uma consulta que retorne apenas o modelo Kwid
SELECT modelo
FROM carro
WHERE modelo = 'Kwid';
'''
consulta()

'''
Faça uma consulta que retorne todos os modelos e marcas
que sejam diferentes de Kwid
SELECT carro.modelo, marca.marca
FROM carro
JOIN marca ON carro.codmarca = marca.codmarca
WHERE carro.modelo <> (SELECT modelo
FROM carro
WHERE modelo = 'Kwid');
'''
consulta()

'''
Faça uma consulta que retorne os valores de carros maiores que
120

SELECT valor
FROM carro
WHERE valor > 120;
'''
consulta()

'''
Faça uma consulta que retorne marca, modelo, valor e data_aluguel dos algueis
de carros com valor maior que 120
SELECT marca.marca, carro.modelo, carro.valor, aluguel.data_aluguel
FROM aluguel
JOIN carro ON aluguel.codcarro = carro.codcarro
JOIN marca ON carro.codmarca = marca.codmarca
WHERE carro.valor = (SELECT valor
FROM carro
WHERE valor > 120);
'''
consulta()

'''
Faça uma consulta que retorne marca, modelo, valor e data_aluguel dos algueis
de carros com valor maior que 120
SELECT marca.marca, carro.modelo, carro.valor, aluguel.data_aluguel
FROM aluguel
JOIN carro ON aluguel.codcarro = carro.codcarro
JOIN marca ON carro.codmarca = marca.codmarca
WHERE carro.valor IN (SELECT valor
FROM carro
WHERE valor > 120);
'''
consulta()

'''
Faça uma consulta que retorne o valor dos carros com valor
menor ou igual a 120
SELECT valor
FROM carro
WHERE valor <= 120;
'''
consulta()

'''
Faça uma consulta que retorne marca, modelo, valor e data_aluguel dos algueis
de carros com valor maior que 120
SELECT marca.marca, carro.modelo, carro.valor, aluguel.data_aluguel
FROM aluguel
JOIN carro ON aluguel.codcarro = carro.codcarro
JOIN marca ON carro.codmarca = marca.codmarca
WHERE carro.valor > ALL (SELECT valor
FROM carro
WHERE valor <= 120);
'''
consulta()

'''
Liste os modelos de carros cujo valor é maior que o valor de PELO MENOS um
carro da marca Fiat.
SELECT modelo
FROM carro
WHERE valor > ANY (
    SELECT valor
    FROM carro
    WHERE codmarca = (SELECT codmarca FROM marca WHERE marca = 'Fiat')
);
'''
consulta()

'''
Liste os modelos de carros cujo valor é maior que o valor de PELO MENOS um
carro da marca Fiat ou Ford.
SELECT modelo, valor
FROM carro
WHERE valor > ANY (
    SELECT valor
    FROM carro
    WHERE codmarca IN (SELECT codmarca FROM marca WHERE marca = 'Fiat' OR marca = 'Ford')
);
'''
consulta()

'''
Liste os nomes dos clientes que já realizaram aluguéis.
SELECT nome
FROM cliente
WHERE EXISTS (SELECT codaluguel
              FROM aluguel
              WHERE aluguel.codcliente = cliente.codcliente);
'''
consulta()

'''
Faça uma consulta que retorne nome, sexo e estadocivil das mulheres casadas
SELECT nome, sexo, estadocivil
FROM cliente
WHERE sexo = 'F' AND estadocivil = 'C';
'''
consulta()

'''
Faça uma consulta que retorne nome, sexo, estado civil e data_aluguel
dos clientes femininos casadas

SELECT cliente.nome, cliente.sexo, cliente.estadocivil, aluguel.data_aluguel
FROM aluguel
JOIN cliente ON aluguel.codcliente = cliente.codcliente
WHERE (cliente.nome, cliente.sexo, cliente.estadocivil) IN (SELECT nome, sexo, estadocivil
FROM cliente
WHERE sexo = 'F' AND estadocivil = 'C');
'''
consulta()

'''
Selecione o nome e a quantidade de aluguéis de cada cliente
SELECT cliente.nome, count(aluguel.codaluguel) AS qtde
FROM aluguel
JOIN cliente ON aluguel.codcliente = cliente.codcliente
GROUP BY cliente.nome;
'''
consulta()

'''
Liste os nomes dos clientes que realizaram mais de dois aluguéis.
SELECT fonte.nome, fonte.qtde
FROM (SELECT cliente.nome, count(aluguel.codaluguel) AS qtde
FROM aluguel
JOIN cliente ON aluguel.codcliente = cliente.codcliente
GROUP BY cliente.nome) AS fonte
WHERE fonte.qtde > 2;
'''
consulta()

'''
SELECT cliente.nome, sum(carro.valor) AS valor_total
FROM cliente
JOIN aluguel ON cliente.codcliente = aluguel.codcliente
JOIN carro ON aluguel.codcarro = carro.codcarro
GROUP BY cliente.nome;
'''
consulta()

'''
Liste os clientes e o valor total dos carros que eles alugaram para os clientes
cujo valor_total seja maior que 300.
SELECT nome, valor_total
FROM (SELECT cliente.nome, sum(carro.valor) AS valor_total
FROM cliente
JOIN aluguel ON cliente.codcliente = aluguel.codcliente
JOIN carro ON aluguel.codcarro = carro.codcarro
GROUP BY cliente.nome) AS fonte
WHERE fonte.valor_total > 300;
'''
consulta()

"""#CTEs"""

'''
Liste os clientes e a quantidade de aluguéis que cada um realizou.

WITH alugueis_por_cliente AS (
  SELECT cliente.nome, count(aluguel.codaluguel) AS qtde
  FROM aluguel
  JOIN cliente ON aluguel.codcliente = cliente.codcliente
  GROUP BY cliente.nome
)
SELECT nome, qtde
FROM alugueis_por_cliente;
'''
consulta()

'''
Consulta com mais de uma CTE

Queremos listar, para cada estado, os clientes que gastaram mais com aluguéis,
incluindo o nome do cliente, o estado e o valor total gasto.

WITH total_gasto_cliente AS (
    SELECT c.codcliente, c.nome, c.estado, SUM(car.valor) AS total_gasto
    FROM cliente c
    JOIN aluguel a ON c.codcliente = a.codcliente
    JOIN carro car ON a.codcarro = car.codcarro
    GROUP BY c.codcliente, c.nome, c.estado
),
gasto_por_estado AS (
    SELECT estado, MAX(total_gasto) AS maior_gasto
    FROM total_gasto_cliente
    GROUP BY estado
)
SELECT tgc.nome, tgc.estado, tgc.total_gasto
FROM total_gasto_cliente tgc
JOIN gasto_por_estado gpe ON tgc.estado = gpe.estado AND tgc.total_gasto = gpe.maior_gasto;

'''
consulta()

'''
Lista para o fds:

https://docs.google.com/document/d/1mCn60M6JavAAPA6Sh4-mLN1X1Y55jDGUUwnq3vh73pw/edit?usp=sharing

'''