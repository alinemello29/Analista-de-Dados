# -*- coding: utf-8 -*-
"""Alpha_Vantage

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19LpqSOXJo9e7SmHXQ9YOpNcn1K-Vc_Ip
"""

import requests
import pandas as pd
# Configurações
API_KEY = 'ZDRNPBD1FATG77YK'
SYMBOL = 'MDIA3.SA'
BASE_URL = 'https://www.alphavantage.co/query'

# Parâmetros para dados diários
params = {
    'function': 'TIME_SERIES_DAILY',
    'symbol': SYMBOL,
    'apikey': API_KEY,
    'outputsize': 'full',  # Use 'full' para todos os dados históricos ou 'compact' para os últimos 100 dias.
    'datatype': 'json'
}

# Requisição à API
response = requests.get(BASE_URL, params=params)

# Processar os dados se a requisição foi bem-sucedida
if response.status_code == 200:
    data = response.json()
    time_series = data['Time Series (Daily)']

    # Transformar em DataFrame
    df = pd.DataFrame.from_dict(time_series, orient='index')
    df.reset_index(inplace=True)
    df.rename(columns={
        'index': 'Date',
        '1. open': 'Open',
        '2. high': 'High',
        '3. low': 'Low',
        '4. close': 'Close',
        '5. volume': 'Volume'
    }, inplace=True)

    # Converter a coluna 'Date' para datetime e as demais para float
    df['Date'] = pd.to_datetime(df['Date'])
    df[['Open', 'High', 'Low', 'Close', 'Volume']] = df[['Open', 'High', 'Low', 'Close', 'Volume']].astype(float)

    # Filtrar por intervalo de datas
    start_date = '2022-01-01'
    end_date = '2023-12-31'
    filtered_df = df[(df['Date'] >= start_date) & (df['Date'] <= end_date)]

    # Salvar os dados filtrados em CSV
    filtered_df.to_csv(f'{SYMBOL}_filtered_data.csv', index=False)
    print(f"Dados filtrados de {start_date} a {end_date} salvos em {SYMBOL}_filtered_data.csv")
else:
    print(f"Erro na requisição: {response.status_code}")

dados = pd.read_csv('/content/MDIA3.SA_filtered_data.csv')
dados.tail()

import pandas as pd

# Exemplo de DataFrame
data = {
    'preco': [100, 102, 105, 103, 107]  # Dados mais recentes primeiro
}
df = pd.DataFrame(data)

# Criar coluna de variação percentual
df['variacao_percentual'] = ((df['preco'] - df['preco'].shift(-1)) / df['preco'].shift(-1)) * 100

print(df)

df = dados[['Close', 'Volume']]

df['variacao_percentual'] = ((df['Close'] - df['Close'].shift(-1)) / df['Close'].shift(-1))

display(df)